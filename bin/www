#!/usr/bin/env node

(function () {
    var debug = require('debug')('cloud-drive');
//    var sticky = require('sticky-session');
    var app = require('../app');
    process.env.port = 3000;
    if(process.argv.length > 2) // node www 3000
        process.env.port = process.argv[2];
    app.set('port', process.env.port);

//    //CPU几核？
//    var cpus = require('os').cpus().length;
//
//    //子进程监听消息处理函数
//    var workerListener = function (msg) {
//        if (msg.access)
//            console.log('user access %s, worker [%d]',
//                msg.access, msg.workerid);
//    };
//    //fork新的子进程函数
//    var forkWorker = function (listener) {
//        var worker = cluster.fork();
//        console.log('worker [%d] has been created',
//            worker.process.pid);
//        worker.on('message', listener);
//        return worker;
//    };
//
//    //Cluster处理
//    var cluster = require('cluster');
//    if (cluster.isMaster) {
//        for (var i = 0; i < cpus; i++) {
//            forkWorker(workerListener);
//        }
//    } else {
//        var http = require('http'),
//            upload = require('../modules/upload/upload');
//        var server = http.createServer(app);
//        upload.bind(server);
//        return server.listen(3000);
//    }
//
//    //Cluster收到子进程退出消息
//    cluster.on('exit', function (worker, code, signal) {
//        console.log('worker [%d] died %s, fork a new one.',
//            worker.process.pid, code || signal);
//        forkWorker(workerListener);
//    });
//    //Cluster收到子进程运行消息
//    cluster.on('online', function (worker) {
//        console.log('worker [%d] is running.', worker.process.pid);
//    });

    // sticky-session built-in cluster worker
//    return sticky(function () {
//        var http = require('http'),
//            upload = require('../modules/upload/upload');
//        var server = http.createServer(app);
//        upload.bind(server);
//        console.log('worker pid: ' + process.pid);
//        return server;
//    }).listen(app.get('port'), function () {
//        debug('Express server listening on port ' + app.get('port'));
//    });

    // single core settings
    var http = require('http'),
        upload = require('../modules/upload/upload');
    var server = http.createServer(app);
    upload.bind(server);
    console.log('worker pid: ' , process.pid , ', listening on port:', process.env.port);
    return server.listen(app.get('port'), function () {
        debug('Express server listening on port ' + app.get('port'));
    });
})();
